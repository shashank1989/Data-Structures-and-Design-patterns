/*WAP to match Paranthesis , if found pop out the matching paranthesis */

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paranthesismatching_stack;

import java.util.Scanner;

/**
 *
 * @author shashank
 */
public class ParanthesisMatching_stack {

   
   
       public static void push(char arr[],int i, char c)
        {
            arr[i] = c;
     
        }
     
         public static char[] pop(char arr[],int i)
        {
           
            arr[i] = '\0';
           
            return arr;
           
        }
     
     
    public static void main(String[] args) {
        // TODO code application logic here
       
        Scanner sc = new Scanner(System.in);
       
        System.out.print("check paranthesis -- Enter the string");
        String str = sc.next();
        char arr[] = new char[str.length()];
       
       
        for(int i = 0,top =0;i<arr.length;i++)
        {
            char c = str.charAt(i);
           
            if(c=='{'||c=='['||c=='(')
            {
               push(arr,top,c);
               top++;
            }
            else
            {
                if(top!=0)
                {
                if(c == ')' && arr[top-1]== '(')
                {
                    arr =  pop(arr,top-1);
                    System.out.println("Popping out -- (");
                    top--;
                }
                else if(c == '}' && arr[top-1]== '{')
                {
                arr =   pop(arr,top-1);
                    System.out.println("Popping out -- {");
                    top--;
                }
                else if(c == ']' && arr[top-1]== '[')
                {
                arr =   pop(arr,top-1);
                    System.out.println("Popping out -- [");
                    top--;
                }
                 else
                {
                    push(arr,top,c);
                    top++;
                }
                }
                 else
                {
                    push(arr,top,c);
                    top++;
                }
               
            }
                     
        }
         for(int k = 0;arr[k]!='\0';k++)
            {
                System.out.println("no paranthesis for :-" + k + " is :" + arr[k]);
            }
       
       
    }
   
}
